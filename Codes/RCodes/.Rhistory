knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(tidyr)
library(cluster)
library(factoextra)
library(NbClust)
df=read_csv('../../FinalData/finaldata.rds')
non_na=df %>% filter(Urban_Rural_New==1) %>%  drop_na()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(tidyr)
library(cluster)
library(factoextra)
library(NbClust)
df=readRds('../../FinalData/finaldata.rds')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(tidyr)
library(cluster)
library(factoextra)
library(NbClust)
df=readRDS('../../FinalData/finaldata.rds')
non_na=df %>% filter(Urban_Rural_New==1) %>%  drop_na()
non_na=df %>% dplyr::filter(Urban_Rural_New==1) %>%  drop_na()
non_na=df %>% dplyr::filter(Urban_Rural_New==1) %>%  drop_na()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(tidyr)
library(cluster)
library(factoextra)
library(NbClust)
df=readRDS('../../FinalData/finaldata.rds')
non_na=df %>% dplyr::filter(Urban_Rural_New==1) %>%  drop_na()
non_na=df %>% select(-geometry) %>% dplyr::filter(Urban_Rural_New==1) %>%  drop_na()
five_be_df = non_na %>% select(prop_dilapbldg, prop_green, prop_crosswalk, prop_not_single_family_home, prop_single_lane)
set.seed(123)
fviz_nbclust(five_be_df, clara, method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
clara.res <- clara(five_be_df, 4, samples = 50, pamLike = TRUE)
print(clara.res)
non_na_with_cluster=cbind(non_na, cluster = clara.res$cluster)
write_csv(non_na_with_cluster,'../../FinalData/four_cluster_urban.csv')
fviz_cluster(clara.res, geom="point",
alpha=0.1,shape=19,
show.clust.cent=TRUE, ellipse.alpha=0.3)
clara.res <- clara(five_be_df, 5, samples = 50, pamLike = TRUE)
fviz_cluster(clara.res, geom="point",
alpha=0.1,shape=19,
show.clust.cent=TRUE, ellipse.alpha=0.3)
library(sf)
library(tidyr)
library(tidyverse)
library(dplyr)
library(corrplot)
library(ggcorrplot)
library(reshape2)
library(car)
library(reshape)
library(knitr)
library(stringr)
library(effects)
library(corrplot)
library(vtable)
library(metan)
library(ggplot2)
library(ggridges)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
# Load data
df <- readRDS(file = "../../FinalData/finaldata.rds")
df_holc <- readRDS("../../FinalData/finaldata_holc.rds")
df$log.median.house.income  <- log(df$Median.household.income)
# Tract Level
df_holc  %>%
filter(Urban_Rural_New == 1) %>%
dplyr::select(sleep_crud, diabetes_c, casthma_cr, prop_dilapbldg,  prop_green, prop_crosswalk, prop_not_single_family_home, prop_single_lane, Median.household.income, Pct_college, Age, Pct_Female, Pct_insurance, Pct_Owner, Pct_Vacant, Pct_SingleFam, majority_grade) %>%
tbl_summary(
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
missing_text = 'Missing',
digits = all_continuous() ~ 2,
label = list(sleep_crud ~"Sleeping Problems", diabetes_c ~ "Diabetes",
casthma_cr~"Asthma", prop_dilapbldg~"% Dilapidated", prop_green~"% Green space", prop_crosswalk~"% Crosswalk", prop_not_single_family_home~"% Non-single Family Home", prop_single_lane~"% Single Lane", Median.household.income~"Median Household Income", Pct_college~"% College", Age~"Age", Pct_Female~"% Female", Pct_insurance~"% Insured", Pct_Owner~ "% Owner Occupied Housing", Pct_Vacant~"% Vacant Housing", Pct_SingleFam~"% Single Female Head of Household with Children", majority_grade~"HOLC Grade"
)
) %>% add_n()
# Population Level
df_holc %>% summarise(White = sum(Pop_White),
Black = sum(Pop_Black),
Native = sum(Pop_Native),
Asian = sum(Pop_Asian),
HIPI= sum(Pop_HIPI),
Hispanic= sum(Pop_Hispanic),
TotalPop=sum(TotalPop),
"% Non-Hispanic White" = sum(Pop_White)/sum(TotalPop),
"% Non-Hispanic Black" = sum(Pop_Black)/sum(TotalPop),
"% American Indian/Alaska Native" = sum(Pop_Native)/sum(TotalPop),
"% Asian" = sum(Pop_Asian)/sum(TotalPop),
"% Native Hawaiian and Other Pacific Islander"= sum(Pop_HIPI)/sum(TotalPop),
"% Hispanic"= sum(Pop_Hispanic)/sum(TotalPop),
) %>% t()
library(sf)
library(tidyr)
library(tidyverse)
library(dplyr)
library(corrplot)
library(ggcorrplot)
library(reshape2)
library(car)
library(reshape)
library(knitr)
library(stringr)
library(effects)
library(corrplot)
library(vtable)
library(metan)
library(ggplot2)
library(ggridges)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
# Load data
df <- readRDS(file = "../../FinalData/finaldata.rds")
df_holc <- readRDS("../../FinalData/finaldata_holc.rds")
df$log.median.house.income  <- log(df$Median.household.income)
# Tract Level
df_holc  %>%
filter(Urban_Rural_New == 1) %>%
dplyr::select(sleep_crud, diabetes_c, casthma_cr, prop_dilapbldg,  prop_green, prop_crosswalk, prop_not_single_family_home, prop_single_lane, Median.household.income, Pct_college, Age, Pct_Female, Pct_insurance, Pct_Owner, Pct_Vacant, Pct_SingleFam, majority_grade) %>%
tbl_summary(
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
missing_text = 'Missing',
digits = all_continuous() ~ 2,
label = list(sleep_crud ~"Sleeping Problems", diabetes_c ~ "Diabetes",
casthma_cr~"Asthma", prop_dilapbldg~"% Dilapidated", prop_green~"% Green space", prop_crosswalk~"% Crosswalk", prop_not_single_family_home~"% Non-single Family Home", prop_single_lane~"% Single Lane", Median.household.income~"Median Household Income", Pct_college~"% College", Age~"Age", Pct_Female~"% Female", Pct_insurance~"% Insured", Pct_Owner~ "% Owner Occupied Housing", Pct_Vacant~"% Vacant Housing", Pct_SingleFam~"% Single Female Head of Household with Children", majority_grade~"HOLC Grade"
)
) %>% add_n()
# Population Level
df_holc %>% summarise(White = sum(Pop_White),
Black = sum(Pop_Black),
Native = sum(Pop_Native),
Asian = sum(Pop_Asian),
HIPI= sum(Pop_HIPI),
Hispanic= sum(Pop_Hispanic),
TotalPop=sum(TotalPop),
"% Non-Hispanic White" = sum(Pop_White)/sum(TotalPop),
"% Non-Hispanic Black" = sum(Pop_Black)/sum(TotalPop),
"% American Indian/Alaska Native" = sum(Pop_Native)/sum(TotalPop),
"% Asian" = sum(Pop_Asian)/sum(TotalPop),
"% Native Hawaiian and Other Pacific Islander"= sum(Pop_HIPI)/sum(TotalPop),
"% Hispanic"= sum(Pop_Hispanic)/sum(TotalPop),
) %>% t()
library(sf)
library(tidyr)
library(tidyverse)
library(dplyr)
library(corrplot)
library(ggcorrplot)
library(reshape2)
library(car)
library(reshape)
library(knitr)
library(stringr)
library(effects)
library(corrplot)
library(vtable)
library(metan)
library(ggplot2)
library(ggridges)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
# Load data
df <- readRDS(file = "../../FinalData/finaldata.rds")
df_holc <- readRDS("../../FinalData/finaldata_holc.rds")
# Tract Level
df_holc  %>%
filter(Urban_Rural_New == 1) %>%
dplyr::select(sleep_crud, diabetes_c, casthma_cr, prop_dilapbldg,  prop_green, prop_crosswalk, prop_not_single_family_home, prop_single_lane, Median.household.income, Pct_college, Age, Pct_Female, Pct_insurance, Pct_Owner, Pct_Vacant, Pct_SingleFam, majority_grade) %>%
tbl_summary(
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing = "no",
missing_text = 'Missing',
digits = all_continuous() ~ 2,
label = list(sleep_crud ~"Sleeping Problems", diabetes_c ~ "Diabetes",
casthma_cr~"Asthma", prop_dilapbldg~"% Dilapidated", prop_green~"% Green space", prop_crosswalk~"% Crosswalk", prop_not_single_family_home~"% Non-single Family Home", prop_single_lane~"% Single Lane", Median.household.income~"Median Household Income", Pct_college~"% College", Age~"Age", Pct_Female~"% Female", Pct_insurance~"% Insured", Pct_Owner~ "% Owner Occupied Housing", Pct_Vacant~"% Vacant Housing", Pct_SingleFam~"% Single Female Head of Household with Children", majority_grade~"HOLC Grade"
)
) %>% add_n()
# Population Level
df_holc %>% summarise(White = sum(Pop_White),
Black = sum(Pop_Black),
Native = sum(Pop_Native),
Asian = sum(Pop_Asian),
HIPI= sum(Pop_HIPI),
Hispanic= sum(Pop_Hispanic),
TotalPop=sum(TotalPop),
"% Non-Hispanic White" = sum(Pop_White)/sum(TotalPop),
"% Non-Hispanic Black" = sum(Pop_Black)/sum(TotalPop),
"% American Indian/Alaska Native" = sum(Pop_Native)/sum(TotalPop),
"% Asian" = sum(Pop_Asian)/sum(TotalPop),
"% Native Hawaiian and Other Pacific Islander"= sum(Pop_HIPI)/sum(TotalPop),
"% Hispanic"= sum(Pop_Hispanic)/sum(TotalPop),
) %>% t()
library(sf)
library(tidyr)
library(tidyverse)
library(dplyr)
library(corrplot)
library(ggcorrplot)
library(reshape2)
library(car)
library(reshape)
library(knitr)
library(stringr)
library(effects)
library(corrplot)
library(vtable)
library(metan)
library(ggplot2)
library(ggridges)
library(gtsummary)
knitr::opts_chunk$set(echo = TRUE)
# Load data
df <- readRDS(file = "../../FinalData/finaldata.rds")
df_holc <- readRDS("../../FinalData/finaldata_holc.rds")
df$log.median.house.income  <- log(df$Median.household.income)
library(tidyr)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(merTools)
library(bife)
options(scipen = 999)
set.seed(1)
knitr::opts_chunk$set(echo = TRUE)
# Load data
df <- readRDS(file = "../../FinalData/finaldata.rds")
df_composition <- df %>%
mutate(Composition = ifelse(White >= 60 & Black < 20 & Hispanic < 20 & Asian < 20 & Native < 20 & HIPI < 20, "PW",
ifelse(Black >= 50 & White < 20 & Hispanic < 20 & Asian < 20 & Native < 20 & HIPI < 20, "PB",
ifelse(Black < 20 & White < 20 & (Asian >= 50 | Hispanic >= 50 | Native >= 50 | HIPI >= 50), "PNB", "Mixed"))))  %>%
mutate(Composition = factor(Composition),
bi_PW = ifelse(Composition == "PW", 1, 0),
bi_PB = ifelse(Composition == "PB", 1, 0),
bi_PNB = ifelse(Composition == "PNB", 1, 0),
bi_mixed = ifelse(Composition == "Mixed", 1, 0)) %>%
mutate(Pct_college = Pct_college / 100,
Pct_Female = Pct_Female / 100,
Pct_insurance = Pct_insurance / 100,
Pct_Owner = Pct_Owner / 100,
Pct_Vacant = Pct_Vacant / 100,
Pct_SingleFam = Pct_SingleFam /100,
Urban_Rural_New = as.numeric(Urban_Rural_New))
df_composition$Composition <- relevel(df_composition$Composition, "PW")
df_composition <- df_composition %>% dplyr::select(-geometry) %>%
filter(Urban_Rural_New == 1)
lmer_topo_mediatin=function(treatment_var, med_var, outcome_var, REML=FALSE){
dat <- df_composition %>%  drop_na(c(treatment_var, med_var, outcome_var, Median.household.income, Pct_college , Age, Pct_Female , Pct_insurance , Pct_Owner , Pct_Vacant , Pct_SingleFam , State))
formula_total=formula(paste0(outcome_var,'~',treatment_var,"+ log(Median.household.income) + Pct_college + Age + Pct_Female + Pct_insurance + Pct_Owner+Pct_Vacant+Pct_SingleFam + (1 |State)" ))
fit.totaleffect <- lmer(formula_total ,
data =dat,
REML = REML)
formula_med=formula(paste0(med_var,'~',treatment_var,"+ log(Median.household.income) + Pct_college + Age + Pct_Female + Pct_insurance + Pct_Owner+Pct_Vacant+Pct_SingleFam+ (1 |State)" ))
fit.mediator  <- lmer(formula_med,
data =dat,
REML=REML
)
formula_dv=formula(paste0(outcome_var,'~',treatment_var,'+',med_var,"+ log(Median.household.income) + Pct_college + Age + Pct_Female + Pct_insurance + Pct_Owner+Pct_Vacant+Pct_SingleFam + (1 |State)" ))
fit.dv   <-  lmer(formula_dv,
data =dat,
REML = REML)
class(fit.mediator)<- 'lmerMod'
class(fit.dv)<- 'lmerMod'
class(fit.totaleffect) <- 'lmerMod'
med_pw_pb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'PB',
boot=FALSE, mediator=med_var)
print('PW V.S. PB')
print(summary(med_pw_pb))
med_pw_pnb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'PNB',
boot=FALSE, mediator=med_var)
print('PW V.S. PNB')
print(summary(med_pw_pnb))
med_pw_mixed <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'Mixed',
boot=FALSE, mediator=med_var)
print('PW V.S. Mixed')
print(summary(med_pw_mixed))
return(c(med_pw_pb,med_pw_pnb,med_pw_mixed))
}
lmer_topo_mediatin_unadjusted=function(treatment_var, med_var, outcome_var, REML=FALSE){
dat <- df_composition %>%  drop_na(c(treatment_var, med_var, outcome_var, State))
formula_total=formula(paste0(outcome_var,'~',treatment_var," + (1 |State)" ))
fit.totaleffect <- lmer(formula_total ,
data =dat,
REML = REML)
formula_med=formula(paste0(med_var,'~',treatment_var,"+ (1 |State)" ))
fit.mediator  <- lmer(formula_med,
data =dat,
REML=REML
)
formula_dv=formula(paste0(outcome_var,'~',treatment_var,'+',med_var," + (1 |State)" ))
fit.dv   <-  lmer(formula_dv,
data =dat,
REML = REML)
class(fit.mediator)<- 'lmerMod'
class(fit.dv)<- 'lmerMod'
class(fit.totaleffect) <- 'lmerMod'
med_pw_pb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW',
treat.value = 'PB',
boot=FALSE, mediator=med_var)
print('PW V.S. PB')
print(summary(med_pw_pb))
med_pw_pnb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'PNB',
boot=FALSE, mediator=med_var)
print('PW V.S. PNB')
print(summary(med_pw_pnb))
med_pw_mixed <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'Mixed',
boot=FALSE, mediator=med_var)
print('PW V.S. Mixed')
print(summary(med_pw_mixed))
return(c(med_pw_pb,med_pw_pnb,med_pw_mixed))
}
library(tidyr)
library(tidyverse)
library(dplyr)
library(lme4)
library(lmerTest)
library(merTools)
library(bife)
options(scipen = 999)
set.seed(1)
knitr::opts_chunk$set(echo = TRUE)
# Load data
df <- readRDS(file = "../../FinalData/finaldata.rds")
lmer_topo_mediatin=function(treatment_var, med_var, outcome_var, REML=FALSE){
set.seed(1)
dat <- df_composition %>%  drop_na(c(treatment_var, med_var, outcome_var, Median.household.income, Pct_college , Age, Pct_Female , Pct_insurance , Pct_Owner , Pct_Vacant , Pct_SingleFam , State))
formula_total=formula(paste0(outcome_var,'~',treatment_var,"+ log(Median.household.income) + Pct_college + Age + Pct_Female + Pct_insurance + Pct_Owner+Pct_Vacant+Pct_SingleFam + (1 |State)" ))
fit.totaleffect <- lmer(formula_total ,
data =dat,
REML = REML)
formula_med=formula(paste0(med_var,'~',treatment_var,"+ log(Median.household.income) + Pct_college + Age + Pct_Female + Pct_insurance + Pct_Owner+Pct_Vacant+Pct_SingleFam+ (1 |State)" ))
fit.mediator  <- lmer(formula_med,
data =dat,
REML=REML
)
formula_dv=formula(paste0(outcome_var,'~',treatment_var,'+',med_var,"+ log(Median.household.income) + Pct_college + Age + Pct_Female + Pct_insurance + Pct_Owner+Pct_Vacant+Pct_SingleFam + (1 |State)" ))
fit.dv   <-  lmer(formula_dv,
data =dat,
REML = REML)
class(fit.mediator)<- 'lmerMod'
class(fit.dv)<- 'lmerMod'
class(fit.totaleffect) <- 'lmerMod'
med_pw_pb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'PB',
boot=FALSE, mediator=med_var)
print('PW V.S. PB')
print(summary(med_pw_pb))
med_pw_pnb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'PNB',
boot=FALSE, mediator=med_var)
print('PW V.S. PNB')
print(summary(med_pw_pnb))
med_pw_mixed <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'Mixed',
boot=FALSE, mediator=med_var)
print('PW V.S. Mixed')
print(summary(med_pw_mixed))
return(c(med_pw_pb,med_pw_pnb,med_pw_mixed))
}
lmer_topo_mediatin_unadjusted=function(treatment_var, med_var, outcome_var, REML=FALSE){
set.seed(1)
dat <- df_composition %>%  drop_na(c(treatment_var, med_var, outcome_var, State))
formula_total=formula(paste0(outcome_var,'~',treatment_var," + (1 |State)" ))
fit.totaleffect <- lmer(formula_total ,
data =dat,
REML = REML)
formula_med=formula(paste0(med_var,'~',treatment_var,"+ (1 |State)" ))
fit.mediator  <- lmer(formula_med,
data =dat,
REML=REML
)
formula_dv=formula(paste0(outcome_var,'~',treatment_var,'+',med_var," + (1 |State)" ))
fit.dv   <-  lmer(formula_dv,
data =dat,
REML = REML)
class(fit.mediator)<- 'lmerMod'
class(fit.dv)<- 'lmerMod'
class(fit.totaleffect) <- 'lmerMod'
med_pw_pb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW',
treat.value = 'PB',
boot=FALSE, mediator=med_var)
print('PW V.S. PB')
print(summary(med_pw_pb))
med_pw_pnb <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'PNB',
boot=FALSE, mediator=med_var)
print('PW V.S. PNB')
print(summary(med_pw_pnb))
med_pw_mixed <- mediation::mediate(fit.mediator, fit.dv, treat=treatment_var,
control.value = 'PW', treat.value = 'Mixed',
boot=FALSE, mediator=med_var)
print('PW V.S. Mixed')
print(summary(med_pw_mixed))
return(c(med_pw_pb,med_pw_pnb,med_pw_mixed))
}
set.seed(1)
be_cols=c("prop_dilapbldg", "prop_green", "prop_crosswalk","prop_not_single_family_home", "prop_single_lane")
health_cols=c('casthma_cr','diabetes_c' ,'sleep_crud')
for (health in health_cols){
for (be in be_cols){
capture.output(paste(health,'mediated by',be), file = paste0('../../Output/mediation_unadjusted/',health,'~',be,'.txt'),append=TRUE)
capture.output(lmer_topo_mediatin_unadjusted('Composition', be,health, FALSE), file = paste0('../../Output/mediation_unadjusted/',health,'~',be,'.txt'),append=TRUE)
capture.output('=======================', file = paste0('../../Output/mediation_unadjusted/',health,'~',be,'.txt'),append=TRUE)
}
}
set.seed(1)
be_cols=c("prop_dilapbldg", "prop_green","prop_crosswalk","prop_not_single_family_home", "prop_single_lane")
health_cols=c('casthma_cr','diabetes_c' ,'sleep_crud')
for (health in health_cols){
for (be in be_cols){
capture.output(paste(health,'mediated by',be), file = paste0('../../Output/mediation_adjusted/',health,'~',be,'.txt'),append=TRUE)
capture.output(lmer_topo_mediatin('Composition', be,health, FALSE), file = paste0('../../Output/mediation_adjusted/',health,'~',be,'.txt'),append=TRUE)
capture.output('=======================', file = paste0('../../Output/mediation_adjusted/',health,'~',be,'.txt'),append=TRUE)
}
}
